on:
  workflow_run:
    workflows: ["Build and test Go"]
    types:
      - completed
name: deploy to lambda
jobs:
  deploy_zip:
    name: deploy lambda function
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        go-version: [1.22]
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o fx_alert && zip deployment.zip fx_alert config/prod.yaml
      - name: AWS Lambda deploy
        if: github.ref == 'refs/heads/master'
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: fx_alert
          zip_file: deployment.zip
          memory_size: 512
          timeout: 5
          handler: fx_alert
          role: arn:aws:iam::215593062382:role/service-role/fx_alert-role-f0fh0zh4
          runtime: provided.al2
          dry_run: true
